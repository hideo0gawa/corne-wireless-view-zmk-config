/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 * Additional : 2nd layer - Enter Row and double quotation fixed 
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define mo1_layer   1
#define mo2_layer   2
#define mo3_layer   3
#define mo4_layer   4

/ {
    behaviors {
        ht_tp: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "hold_tap";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };


/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {


// Layer 0 -----------------------------------------------------------------------------------------
//   Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  
//   A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  
//   Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  
//                    | Shift | MO3 | MO2 |   | ENT | SPC  | MO1 |


                        bindings = <
   &trans &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P           &trans
   &trans &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI        &trans
   &trans &ht_tp(&kp Z, &kp LSHFT) &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH        &trans
                  &kp LSHFT &mo mo3_layer &mo mo2_layer   &kp RET &kp SPACE &mo mo1_layer
                        >;
                };





                mo1_layer {


// Layer 1 -----------------------------------------------------------------------------------------
//   ESC|  W  |  E  |  R  |  T  |   |  Y  |  U   |  UP  |  BCKSPC  |  DEL  
//   A  |  S  |  D  |  F  |  G  |   |  H  | LFT  |  DWN | RGT |  :   
//   Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  <  |  >  |  ?   
//                    | CTRL |  GUI [OS Key]  | ALT |   | TAB |  SPC   | MO1  |


                        bindings = <
   &trans &kp ESC      &trans       &trans       &trans       &trans         &trans   &trans          &kp UP         &kp BSPC          &kp DEL        &trans
   &trans &trans       &trans       &trans       &trans       &trans         &trans   &kp LEFT        &kp DOWN       &kp RIGHT       &kp COLON        &trans
   &trans &trans       &trans       &trans       &trans       &trans         &trans   &trans          &kp LT         &kp GT          &kp QMARK        &trans 
                          	 &kp LCTRL     &kp LGUI       &kp RALT             &kp TAB         &trans   &trans 
                        >;
                };






                mo2_layer {


// Layer 2 -----------------------------------------------------------------------------------------
//   !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | 
//   "  |  ~  | "|" |     |  -  |   |  +  |     |     |     |  :  |  
//      |     |     |     |     |   |  {  |  }  |  <  |  >  |  /  |  
//                    | Shift   |  CTR   | [MO2] |   | = |  SPC  | MO4 |


                        bindings = <
   &trans &kp EXCL        &kp AT         &kp HASH         &kp DLLR         &kp PRCNT           &kp CARET         &kp AMPS      &kp KP_MULTIPLY        &kp LPAR      &kp RPAR        &trans 
   &trans &kp DQT        &kp TILDE      &kp PIPE         &trans           &kp MINUS           &kp PLUS          &trans        &trans                 &trans        &kp COLON        &trans
   &trans &trans          &trans         &trans           &trans           &trans              &kp LBRC          &kp RBRC      &kp LT                 &kp GT        &kp FSLH         &trans
                    	    &kp RET  &kp LCTRL    &trans   &kp EQUAL  &trans  &mo mo4_layer
                        >;
                };






                mo3_layer {


// Layer 1 -----------------------------------------------------------------------------------------
//   1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | 
//   '  |  `  |  \  |     |  _  |   |  =  |     |     |     |  ;  |  
//      |     |     |     |     |   |  [  |  ]  |  ,  |  .  |  /  |  
//                    | Shift | [mo3]  | mo2 |   | _ |     | MO4 |


                        bindings = <
   &trans &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6           &kp N7           &kp N8        &kp N9    &kp N0        &trans
   &trans &kp SQT      &kp GRAVE    &kp BSLH     &trans       &kp UNDER      &kp EQUAL        &trans           &trans        &trans    &kp SEMI        &trans
   &trans &trans       &trans       &trans       &trans       &trans         &kp LBKT         &kp RBKT         &kp COMMA     &kp DOT   &kp FSLH        &trans
                          	       &trans      &trans       &trans       &kp UNDER   &trans   &mo mo4_layer
                        >;
                };




                mo4_layer {


// Layer 1 -----------------------------------------------------------------------------------------
//   F1  |  F2  |  F3  |  F4  |  F5  |   |  F6  |  F7  |  F8  |  F9  |  BSPC  | 
//  BT1 | BT2 | BT3 | BT4 | BT5 |   |     |     |     |     |       |   
//      |     |     |     |     |   |     |     |     |     |       |   
//                    | [Shift] |   |    |  |     |  |


                        bindings = <
   &trans &kp F1         &kp F2               &kp F3             &kp F4           &kp F5               &kp F6   &kp F7   &kp F8       &kp F9    &kp BSPC        &trans
   &trans &bt BT_SEL 0   &bt BT_SEL 1         &bt BT_SEL 2       &bt BT_SEL 3    &bt BT_SEL 4         &trans   &trans   &trans       &trans    &trans        &trans
   &trans &trans               &trans               &trans               &trans            &trans               &trans   &trans   &trans       &trans    &trans         &trans
                          	        &trans     &trans       &trans      &trans  &trans   &trans
                        >;
                };
        };
};
