/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT    0
#define RIGHT      1
#define LEFT       2
#define Tri        3

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {


// Layer 0 -----------------------------------------------------------------------------------------
//   Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  
//   A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  
//   Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  
//                    | Shift | MO3 | MO2 |   | ENT | SPC  | MO1 |


                        bindings = <
   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    
   &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI 
   &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH 
                  &kp LSHFT &mo 3 &mo 2   &kp RET &kp SPACE &mo 2
                        >;
                };





                mo1_layer {


// Layer 1 -----------------------------------------------------------------------------------------
//   ESC|  W  |  E  |  R  |  T  |   |  Y  |  U   |  UP  |  9  |  0  
//   A  |  S  |  D  |  F  |  G  |   |  H  | LFT  |  DWN | RGT |  :   
//   Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  <  |  >  |  ?   
//                    | CTRL |  GUI [OS Key]  | ALT |   | ENT |  SPC   | MO1  |


                        bindings = <
   &kp ESC      &trans       &trans       &trans       &trans         &trans   &trans          &kp UP         &trans          &kp BSPC
   &trans       &trans       &trans       &trans       &trans         &trans   &kp LEFT        &kp DOWN       &kp RIGHT       &kp COLON 
   &trans       &trans       &trans       &trans       &trans         &trans   &trans          &kp LT         &kp GT          &kp QMARK 
                          	 &kp LCTRL     &kp LGUI       &kp RALT             &trans          &trans   &kp RALT
                        >;
                };






                mo2_layer {


// Layer 2 -----------------------------------------------------------------------------------------
//   !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | 
//   "  |  ~  | "|" |     |  -  |   |  +  |     |     |     |  :  |  
//      |     |     |     |     |   |  {  |  }  |  <  |  >  |  ?  |  
//                    | Shift   |     | [MO2] |   | ENT |  SPC  | MO4 |


                        bindings = <
   &kp EXCL        &kp AT         &kp HASH         &kp DLLR         &kp PRCNT           &kp CARET         &kp AMPS      &kp KP_MULTIPLY        &kp LPAR      &kp RPAR 
   &kp APOS        &kp TILDE      &kp PIPE         &trans           &kp MINUS           &kp PLUS          &trans        &trans                 &trans        &kp COLON 
   &trans          &trans         &trans           &trans           &trans              &kp LBRC          &kp RBRC      &kp LT                 &kp GT        &kp QMARK 
                    	     &trans  &trans   &trans   &trans  &trans  &mo 4
                        >;
                };






                mo3_layer {


// Layer 1 -----------------------------------------------------------------------------------------
//   1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | 
//   '  |  `  |  \  |     |  _  |   |  =  |     |     |     |  ;  |  
//      |     |     |     |     |   |  [  |  ]  |  ,  |  .  |  /  |  
//                    | Shift | [mo3]  | mo2 |   | ENT |     | ALT |


                        bindings = <
   &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6           &kp N7           &kp N8        &kp N9    &kp N0
   &kp SQT      &kp GRAVE    &kp BSLH     &trans       &kp UNDER      &kp EQUAL        &trans           &trans        &trans    &kp SEMI
   &trans       &trans       &trans       &trans       &trans         &kp LBKT         &kp RBKT         &kp COMMA     &kp DOT   &kp FSLH
                          	       &trans      &trans       &trans       &trans   &trans   &mo 4
                        >;
                };




                mo4_layer {


// Layer 1 -----------------------------------------------------------------------------------------
//   1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  DEL  | 
//  BT1 | BT2 | BT3 | BT4 | BT5 |   |     |     |     |     |       |   
//      |     |     |     |     |   |     |     |     |     |       |   
//                    | [Shift] |   |    |  |     |  |


                        bindings = <
   &bt BT_SEL 0         &bt BT_SEL 1         &bt BT_SEL 2         &bt BT_SEL 3      &bt BT_SEL 4         &kp N6   &kp N7   &kp N8       &kp N9    &kp DEL 
   &trans               &trans               &trans               &trans            &trans               &trans   &trans   &trans       &trans    &trans
   &trans               &trans               &trans               &trans            &trans               &trans   &trans   &trans       &trans    &trans 
                          	        &trans     &trans       &trans      &trans  &trans   &trans
                        >;
                };
        };
};
