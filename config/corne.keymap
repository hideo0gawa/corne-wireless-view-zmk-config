/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 * Additional : 2nd layer - Enter Row and double quotation fixed 
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define mo1_layer   1
#define mo2_layer   2
#define mo3_layer   3
#define mo4_layer   4
#define mo5_layer   5


&mt {
    tapping-term-ms = <200>;
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {

                                
  


// Layer 0 -----------------------------------------------------------------------------------------
//         Q   [ESC]   |  W [@]         |  E [#]          |  R  [$]            |  T   [%]       |  Y    [^]           |  U [&]          |  I   [*]               |  O [(]          |  P  [)]
 

//             A [']        |  S [~]          |  D [|]              |  F     |  G [_]          |   |  H [=]          |  J     |  K       |  L      |  ;  [:]
 

//           Z             |  X          |  C          |  V          |  B          |   |  N   "["       |  M  "]"         |  ,   [<]            |  .    [>]          |  /  [?]


//              | Shift [Caps]         | MO3 |                 MO2 |                   | ENT                 | SPC                          | MO1 |

                        bindings = <

&trans      &mt ESC Q         &kp  W         &kp  E          &kp  R         &kp T       &kp  Y           &kp  U          &kp  I      &kp O         &kp P           &trans
&trans      &kp A         &kp  S         &kp  D         &kp F     &mt UNDER G           &kp  H      &kp J    &kp K      &kp L     &mt COLON SEMI        &trans
&trans      &mt LSHIFT Z     &kp X         &kp C         &kp V         &kp B             &kp N         &kp M         &mt LT COMMA         &mt GT DOT         &mt QMARK FSLH        &trans
                  &mt LSHFT LCTRL        &mo mo3_layer         &mo mo2_layer           &kp RET                 &lt mo5_layer SPACE         &mo mo1_layer
                        >;
                };





                mo1_layer {


// Layer 1 -----------------------------------------------------------------------------------------
//   ESC|  W  |  E  |  R  |  T  |   |  Y  |  U   |  UP  |  BCKSPC  |  DEL  
//   A  |  S  |  D  |  F  |  G  |   |  H  | LFT  |  DWN | RGT |  :   
//   Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  <  |  >  |  ?   
//                    | CTRL |  GUI [OS Key]  | ALT |   | TAB |  SPC   | MO1  |


                        bindings = <
   &trans &mt ESC Q      &mt N2 W         &mt N3 E          &mt N4 R         &mt N5 T          &trans   &trans          &kp UP         &kp BSPC          &kp DEL        &trans
   &trans &trans       &trans       &trans       &trans       &trans         &trans   &kp LEFT        &kp DOWN       &kp RIGHT       &kp COLON        &trans
   &trans &mt LSHIFT Z       &trans       &trans       &trans       &trans         &trans   &trans          &kp LT         &kp GT          &kp QMARK        &trans 
                          	 &kp LCTRL     &kp LGUI       &kp RALT             &kp TAB         &trans   &trans 
                        >;
                };






                mo2_layer {


// Layer 2 -----------------------------------------------------------------------------------------
//   ! [1] |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | 
//   "  |  ~  | "|" |     |  -  |   |  +  |     |     |     |  :  |  
//      |     |     |     |     |   |  {  |  }  |  <  |  >  |  /  |  
//                    | Shift   |  CTR   | [MO2] |   | = |  SPC  | MO4 |


                        bindings = <
   &trans &mt Q EXCL        &mt W AT         &mt N3 HASH         &mt R DLLR         &mt N5 PRCNT           &mt N6 CARET         &mt N7 AMPS      &mt I KP_MULTIPLY        &mt O LPAR      &mt P RPAR        &trans 
   &trans &mt A DQT        &mt S TILDE      &mt BSLH PIPE         &trans           &mt UNDER MINUS           &mt EQUAL PLUS          &trans        &trans                 &trans        &mt SEMI COLON        &trans
   &trans &trans          &trans         &trans           &trans           &trans              &mt LBKT LBRC          &mt RBKT RBRC      &mt COMMA LT                 &mt DOT GT        &mt QMARK FSLH         &trans
                    	    &kp RET  &kp LCTRL    &trans   &kp EQUAL  &trans  &mo mo4_layer
                        >;
                };






                mo3_layer {


// Layer 1 -----------------------------------------------------------------------------------------
//   1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | 
//   '  |  `  |  \  |     |  _  |   |  =  |     |     |     |  ;  |  
//      |     |     |     |     |   |  [  |  ]  |  ,  |  .  |  /  |  
//                    | Shift | [mo3]  | mo2 |   | _ |     | MO4 |


                        bindings = <
   &trans &mt EXCL N1       &mt AT N2       &mt HASH N3       &mt DLLR N4       &mt PRCNT N5         &mt CARET N6           &mt AMPS N7           &mt KP_MULTIPLY N8        &mt LPAR N9    &mt RPAR N0        &trans
   &trans &mt DQT SQT      &mt TILDE GRAVE    &mt PIPE BSLH     &trans       &mt MINUS UNDER      &mt PLUS EQUAL        &trans           &trans        &trans    &mt COLON SEMI        &trans
   &trans &trans       &trans       &trans       &trans       &trans         &mt LBRC LBKT         &mt RBRC RBKT         &mt LT COMMA     &mt GT DOT   &mt QMARK FSLH        &trans
                          	       &trans      &trans       &trans       &kp UNDER   &trans   &mo mo4_layer
                        >;
                };




                mo4_layer {


// Layer 1 -----------------------------------------------------------------------------------------
//   F1  |  F2  |  F3  |  F4  |  F5  |   |  F6  |  F7  |  F8  |  F9  |  BSPC  | 
//  BT1 | BT2 | BT3 | BT4 | BT5 |   |     |     |     |     |       |   
//      |     |     |     |     |   |     |     |     |     |       |   
//                    | [Shift] |   |    |  |     |  |


                        bindings = <
   &trans &kp F1         &kp F2               &kp F3             &kp F4           &kp F5               &kp F6   &kp F7   &kp UP       &kp F9    &kp BSPC        &trans
   &trans &bt BT_SEL 0   &bt BT_SEL 1         &bt BT_SEL 2       &bt BT_SEL 3    &bt BT_SEL 4         &trans   &kp LEFT   &kp DOWN       &kp RIGHT    &trans        &trans
   &trans &trans               &trans               &trans               &trans            &trans               &trans   &trans   &trans       &trans    &trans         &trans
                          	        &trans     &trans       &trans      &trans  &trans   &trans
                        >;
                };



           mo5_layer {


// Layer 4 -----------------------------------------------------------------------------------------
//   !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | 
//   "  |  ~  | "|" |     |  _  |   |  =  |     |     |     |  :  |  
//      |     |     |     |     |   |  [  |  ]  |  <  |  >  |  ?  |  
//                    | Shift   |  CTR   | [MO2] |   | ENT |  SPC  | MO4 |


                        bindings = <
   &trans &kp EXCL        &kp AT         &kp HASH         &kp DLLR         &kp PRCNT           &kp CARET         &kp AMPS      &kp KP_MULTIPLY        &kp BSPC          &kp DEL         &trans 
   &trans &kp DQT        &kp TILDE      &kp PIPE         &trans           &kp UNDER           &kp EQUAL          &trans        &trans                 &trans        &kp COLON        &trans
   &trans &trans          &trans         &trans           &trans           &trans              &kp LBKT         &kp RBKT      &kp LT                 &kp GT        &kp QMARK         &trans
                    	    &trans  &kp LCTRL    &trans   &kp RET  &trans  &trans
                        >;
                };

        };
};
